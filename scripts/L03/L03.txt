Напишите скрипт для управления процессами в Linux, который:
Автоматически завершает работу при любой ошибке.
Принимает два аргумента:

$1 — либо PID процесса (число), либо имя процесса (строка).
$2 — режим завершения: "kill" (обычное завершение) или "forcekill" (принудительное завершение).

Логика работы:
Если первый аргумент содержит цифры (PID процесса):
При "kill" → отправляет сигнал SIGTERM (-15) процессу с указанным PID.
При "forcekill" → сначала отправляет SIGTERM, ждёт 10 секунд, и если процесс не завершился, отправляет SIGKILL (-9).
Если первый аргумент не содержит цифр (имя процесса):
При "kill" → завершает все процессы с указанным именем через pkill -15.
При "forcekill" → сначала отправляет SIGTERM, ждёт 10 секунд, и если процессы остались, отправляет SIGKILL через pkill -9.

Логика работы:
Если первый аргумент содержит цифры (PID процесса):
При "kill" → отправляет сигнал SIGTERM (-15) процессу с указанным PID.
При "forcekill" → сначала отправляет SIGTERM, ждёт 10 секунд, и если процесс не завершился, отправляет SIGKILL (-9).
Если первый аргумент не содержит цифр (имя процесса):
При "kill" → завершает все процессы с указанным именем через pkill -15.
При "forcekill" → сначала отправляет SIGTERM, ждёт 10 секунд, и если процессы остались, отправляет SIGKILL через pkill -9.

Примеры использования:
./script.sh 1234 kill          # Корректное завершение процесса с PID 1234
./script.sh myapp forcekill    # Принудительное завершение всех процессов с именем "myapp"

Требования:
Скрипт должен быть безопасным (завершаться при ошибках).
При forcekill должен быть двухэтапный процесс (сначала мягкое завершение, потом жёсткое).
Выводить информационные сообщения при принудительном завершении.

Дополнительно (если требуется улучшение):
Добавить проверку на существование процесса перед завершением.
Добавить обработку случая, когда процесс/имя не существует.
Логировать действия в файл.